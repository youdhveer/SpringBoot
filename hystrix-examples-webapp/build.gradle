
buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
    
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'war'


// tag::xsd[]
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/countries.xsd"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.6, target: 1.6, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::xsd[]

task afterEclipseImport {
	dependsOn "genJaxb"
}

// tag::jaxb[]
configurations {
    jaxb
}

jar {
    baseName = 'hystrix-gradle'
    version =  '0.1.0'
    from genJaxb.classesDir
}



sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  
  	    
    compile("org.springframework.boot:spring-boot-starter-ws")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile("wsdl4j:wsdl4j:1.6.1")
    jaxb("com.sun.xml.bind:jaxb-xjc:2.2.4-1")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
        
    compile("org.springframework.boot:spring-boot-starter-web") {
        //exclude module: "spring-boot-starter-tomcat"
    }
    //compile("org.springframework.boot:spring-boot-starter-jetty")   
    compile("org.springframework.boot:spring-boot-starter-actuator")    
    
    compile ("org.springframework.cloud:spring-cloud-starter-hystrix:1.2.2.RELEASE")
    compile ("org.springframework.cloud:spring-cloud-starter-hystrix-dashboard:1.2.2.RELEASE")   
	compile ("org.springframework.cloud:spring-cloud-starter-eureka:1.2.2.RELEASE")     
     
    testCompile("junit:junit")
    
    //providedRuntime ("org.springframework.boot:spring-boot-starter-tomcat")
    
    //compile("com.netflix.hystrix:hystrix-javanica:1.3.16")
	//compile("com.netflix.hystrix:hystrix-metrics-event-stream:1.3.16")
    //compile("com.netflix.hystrix:hystrix-core:1.3.16")     
    //compile("com.netflix.hystrix:hystrix-request-servlet:1.3.16")
    //compile("com.netflix.hystrix:hystrix-dashboard:1.3.16")    
    
    
}
